[{"/Users/inonl/Downloads/restaurantclient/src/index.js":"1","/Users/inonl/Downloads/restaurantclient/src/App.js":"2","/Users/inonl/Downloads/restaurantclient/src/pages/Home.js":"3","/Users/inonl/Downloads/restaurantclient/src/pages/ClientInfo.js":"4","/Users/inonl/Downloads/restaurantclient/src/pages/EndScreen.js":"5","/Users/inonl/Downloads/restaurantclient/src/pages/Navbar.js":"6","/Users/inonl/Downloads/restaurantclient/src/pages/Cards.js":"7","/Users/inonl/Downloads/restaurantclient/src/pages/Cart.js":"8","/Users/inonl/Downloads/restaurantclient/src/cartContext.js":"9","/Users/inonl/Downloads/restaurantclient/src/searchContext.js":"10"},{"size":452,"mtime":1659089497023,"results":"11","hashOfConfig":"12"},{"size":926,"mtime":1659470606735,"results":"13","hashOfConfig":"12"},{"size":476,"mtime":1659468388789,"results":"14","hashOfConfig":"12"},{"size":2511,"mtime":1659520922414,"results":"15","hashOfConfig":"12"},{"size":497,"mtime":1659470651386,"results":"16","hashOfConfig":"12"},{"size":2296,"mtime":1659090332433,"results":"17","hashOfConfig":"12"},{"size":6109,"mtime":1659519522780,"results":"18","hashOfConfig":"12"},{"size":874,"mtime":1659519633936,"results":"19","hashOfConfig":"12"},{"size":408,"mtime":1659087320179,"results":"20","hashOfConfig":"12"},{"size":458,"mtime":1659089479554,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"kyrlkf",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/inonl/Downloads/restaurantclient/src/index.js",[],[],[],"/Users/inonl/Downloads/restaurantclient/src/App.js",["59"],[],"import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\nimport ClientInfo from \"./pages/ClientInfo\";\nimport EndScreen from \"./pages/EndScreen\";\nimport Navbar from \"./pages/Navbar\";\nimport { Card } from \"@mui/material\";\nimport Cards from \"./pages/Cards\";\nimport {useState} from \"react\";\n\nfunction App() {\n const [order,setOrder] = useState([]);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Navbar />}>\n          <Route index element={<Home />} />\n          <Route\n            path=\"category/:id\"\n            element={<Cards />}/>\n          <Route path=\"cart/\" element={<Cart />} />\n          <Route path=\"info/\" element={<ClientInfo setOrder={setOrder}/>} />\n          <Route path=\"endscreen/\" element={<EndScreen order={order}/>} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/inonl/Downloads/restaurantclient/src/pages/Home.js",["60"],[],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div style={{ marginTop: \"25px\", textAlign: \"center\" }}>\n      <h4>Welcome to Our Restaurant</h4>\n      <h6 style={{ marginTop: \"30px\" }}>Please press the button to continue</h6>\n      <div style={{ marginTop: \"40px\" }}></div>\n      <Link to={\"category/all\"} className=\"btn btn-primary\">\n        Continue\n      </Link>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/inonl/Downloads/restaurantclient/src/pages/ClientInfo.js",["61","62"],[],"import { Button } from \"@mui/material\";\nimport React from \"react\";\nimport {useState,useEffect} from \"react\";\nimport { useCart } from \"../cartContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ClientInfo({setOrder}) {\n\n  let navigate = useNavigate();\n  const {cart}  = useCart()\n//const [cartId, setCartId] = useState([]);\n\n  const createCartId = () =>\n  {\n    let cartId=[]\n    for (let i of cart) {\n      cartId.push(i.id)\n    }\n    return cartId;\n  }\n // useEffect(() => {\n    //createCartId();\n  //}, []);\n\n  const [form, setForm] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    address: \"\",\n    phone:\"\",\n    dishes:createCartId()\n  });\n\n  const handleForm = (e) => {\n    setForm((formState) => {\n      return {\n        ...formState,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const addOrder = (e) => {\n     e.preventDefault();\n    fetch(\"http://127.0.0.1:8000/api/order/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(form),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setOrder(() => {\n          return data;\n        });\n      });\n\n    navigate(\"/endscreen\", { replace: true });\n  };\n\n  return (\n\n    \n    <form  style={{ padding: \"20px\",width:\"27%\",minWidth:\"300px\" ,display:'flex',alignItems:'flex-start',flexDirection:'column',rowGap:'4px'}}  onSubmit={addOrder}>\n      <h5>Delivery Info</h5>\n       <input \n          type=\"text\"\n          name=\"first_name\"\n          placeholder=\"First name\"\n          className=\"form-control\"\n          onChange={handleForm}\n          value={form.first_name}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"last_name\"\n          placeholder=\"Last name\"\n          className=\"form-control\"\n          onChange={handleForm}\n          value={form.last_name}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"Address\"\n          className=\"form-control\"\n          onChange={handleForm}\n          required\n          value={form.address}\n        />\n        <input\n          type=\"number\"\n          name=\"phone\"\n          placeholder=\"Phone\"\n          className=\"form-control\"\n          onChange={handleForm}\n          value={form.phone}\n          required\n        />\n      <button type='submit' className=\"btn btn-primary\" style={{marginTop:'10px'}}>\n              Submit order\n      </button>\n    </form>\n  );\n}\n\nexport default ClientInfo;\n","/Users/inonl/Downloads/restaurantclient/src/pages/EndScreen.js",[],[],"/Users/inonl/Downloads/restaurantclient/src/pages/Navbar.js",["63"],[],"import React from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useSearchDishes } from \"../searchContext\";\n\nfunction Navbar() {\n\n    const {setSearchDishes} = useSearchDishes()\n  function navToCategoryLink(category,categoryId) {\n    return  <li className=\"nav-item\">\n      <Link className=\"nav-link active\" to={`/category/${categoryId}`}>\n            {category}\n    </Link>\n    </li>\n  }\n\n  const navbarStyle = {\n    display:'flex',\n    flexDirection:'row',\n    width:'100%'\n  }\n  const cartStyle = {\n    padding:'8px',\n    maxHeight:'40px',\n    marginRight:'30px',\n    borderRadius:'4px'\n  }\n\n\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            Noyni\n          </a>\n      \n          <div style = {navbarStyle}>\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                {navToCategoryLink(\"All\",'all')}\n              \n                {navToCategoryLink(\"Burgers\",1)}\n\n                {navToCategoryLink(\"Others\",3)}\n\n                {navToCategoryLink(\"Sides\",4)}\n\n                {navToCategoryLink(\"Drinks\",5)}\n\n                {navToCategoryLink(\"Milkshakes\",6)}\n\n            </ul>\n          \n            <Link to={\"/cart\"} className=\"btn btn-primary\" style={cartStyle}>\n              My cart\n            </Link>\n            <br/>\n          </div>\n          <nav className=\"navbar navbar-light bg-light\">\n            <div className=\"container-fluid\">\n              <form className=\"d-flex\" onSubmit={(e) => {\n                e.preventDefault();\n                setSearchDishes(document.querySelector('#search_input').value.toLowerCase())\n              }}>\n                <input\n                  className=\"form-control me-2\"\n                  type=\"search\"\n                  id=\"search_input\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                />\n                <button className=\"btn btn-outline-success\" type=\"submit\">\n                  Search\n                </button>\n              </form>\n            </div>\n          </nav>\n        </div>\n      </nav>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default Navbar;\n",[],"/Users/inonl/Downloads/restaurantclient/src/pages/Cards.js",["64","65","66","67","68","69","70","71"],[],"import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useParams } from 'react-router-dom';\nimport './Cards.css'\nimport { useCart } from '../cartContext';\nimport { Stack } from '@mui/material';\nimport { useSearchDishes } from '../searchContext';\nexport default function Cards({ propDishes }) { // propDishes -> cart\n  \n  const {searchDishes,setSearchDishes} = useSearchDishes()\n  const {cart,setCart} = useCart()\n  const [dishes,setDishes] = React.useState(propDishes ? (searchDishes ? propDishes.filter(item => item.name.toLowerCase().includes(searchDishes)) : propDishes) : undefined)\n  const [dishesCopy,setDishesCopy] = React.useState(propDishes);\n  const { id } = useParams()\n\n  const filterBySearch = (item) => item.name.toLowerCase().includes(searchDishes)\n\n  const fetchMenu = () => {\n    fetch(\"http://127.0.0.1:8000/api/dish/\")\n      .then((res) => res.json())\n      .then((data) => {\n            // we have search string query\n            if(searchDishes)\n                setDishes(data.filter(filterBySearch))  \n              else { // show all dishes\n                setDishes(data)\n                setDishesCopy(data)\n              }\n      }).catch(err => { // data invalid\n        setDishes(null)\n        console.log(err)\n    });\n  };\n\n\n  // Every time search text changes\n  React.useEffect(() => {\n    if(searchDishes && searchDishes.length > 0)\n       // filter by the specific item name\n      setDishes((dishesCopy ?? dishes).filter(filterBySearch))\n    return () => {\n      setSearchDishes('')\n    }\n  },[searchDishes])\n\n  // when component first loads\n  React.useEffect(() => {\n    if(propDishes) return; // if we come from cart dishes are in props\n    if(id) { // we come from category (navbar)\n      if(id != 'all') //checking if id is not showing all array\n       filterDishesByCategory(id)\n      else fetchMenu() //show all \n    }\n  }, [id])\n\n  const filterDishesByCategory = (category_id) => {\n    fetch(`http://127.0.0.1:8000/api/dish/?category=${category_id}`)\n      .then((res) => res.json())\n      .then((data) => {\n             // if the category is unvalid  -> set to null to show 'invalid category error'\n            if(data.category && data.category[0] === 'Select a valid choice. That choice is not one of the available choices.') {\n                setDishes(null)\n            } else {\n              setDishes(data)  \n              setDishesCopy(data) // duplicates the list of dishes, in case filtered the array.\n          } \n      }).catch(err => { // invalid data -> server/connection error\n          setDishes(null)\n          console.log(err)\n      });\n  };\n\n\n  \n\n  // server request is on-going (dishes loading)\n  if(dishes === undefined) {\n    return <div>Loading category dishes...</div>\n  }\n\n    // request to server success but no dishes (might be wrong category number)\n    if(dishes === null) {\n      return <div>An unknown error has occured please try refreshing the page</div> \n    }\n   \n\n  return (\n    <div className = 'grid_cards'>\n          {dishes.map(dish =>{\n            return(\n            <Card key={dish.id + Math.random()*99999}\n                 sx={{ maxWidth: 250, mb: 3.5,padding:2, maxHeight:420 }}>\n            <CardMedia\n              component=\"img\"\n              height=\"170px\"\n              width=\"10%\"\n            \n              image={dish.imageUrl}\n              alt=\"No dish pic\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"div\">\n                {dish.name}\n              </Typography>\n              <div>${dish.price}</div>\n              <Typography variant=\"body2\" height={'50px'} color=\"text.secondary\">\n                {dish.description}\n              </Typography>\n              {dish.isGlutenFree ? <img style={{ width: \"20px\", height:\"15px\" }} src=\"https://cdn-icons-png.flaticon.com/512/1488/1488167.png\" /> : null}\n              {dish.isVegeterian  ? <img style={{ width: \"20px\", height:\"15px\" }} src=\"https://www.mishloha.co.il/dist/img/item-prop-icons/vegeterianicon.png\" /> : null}\n              <br/>\n              {propDishes && <Typography>\n                {\"Amount: \" + dish.amount}\n              </Typography>}\n            </CardContent>\n            <CardActions>\n             <Stack justifyContent={'center'} alignItems ={'center'}>\n\n         \n             {!propDishes && <Button size=\"small\"\n               style ={{textTransform:'none'}}\n               onClick ={() => {\n                 let existingIndx = cart.findIndex(item => item.id == dish.id);\n                 if(existingIndx === -1) {\n                    dish.amount = 1\n                    setCart([...cart,dish])\n                 } else {\n                    let copy = cart\n                    copy[existingIndx].amount++;\n                    setCart(copy);\n                 }\n              }}>Add to cart</Button>}\n                \n               {\n                (function deleteButton() {\n                    if(propDishes) {\n                      return <Button size=\"small\" \n                      style ={{backgroundColor:'#bd3333',color:'white',textTransform:'none'}} onClick ={() => {\n                       const existingIndx = cart.findIndex(d => d.id == dish.id) //filter item by id and create new array without it\n                       cart[existingIndx].amount--;\n                      if(cart[existingIndx].amount == 0) {\n                          cart.splice(existingIndx, 1)\n                      }\n                       setDishes([...cart]) //showing the dishes in the cart\n                       setCart([...cart]) //delete specific item from cart\n                   }}>Remove from cart</Button>\n                  }else return null\n                })()\n               } \n\n\n                  </Stack>\n            </CardActions>\n          </Card>\n            )\n        })\n    }\n    </div>\n \n    \n  );\n}\n","/Users/inonl/Downloads/restaurantclient/src/pages/Cart.js",[],[],"/Users/inonl/Downloads/restaurantclient/src/cartContext.js",[],[],"/Users/inonl/Downloads/restaurantclient/src/searchContext.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":7,"column":10,"nodeType":"74","messageId":"75","endLine":7,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":3,"column":18,"nodeType":"74","messageId":"75","endLine":3,"endColumn":27},{"ruleId":"72","severity":1,"message":"78","line":2,"column":18,"nodeType":"74","messageId":"75","endLine":2,"endColumn":29},{"ruleId":"79","severity":1,"message":"80","line":49,"column":5,"nodeType":"81","endLine":49,"endColumn":19,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":55,"column":13,"nodeType":"85","messageId":"86","endLine":55,"endColumn":15},{"ruleId":"79","severity":1,"message":"87","line":59,"column":6,"nodeType":"81","endLine":59,"endColumn":10,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":114,"column":36,"nodeType":"91","endLine":114,"endColumn":146},{"ruleId":"89","severity":1,"message":"90","line":115,"column":37,"nodeType":"91","endLine":115,"endColumn":162},{"ruleId":"83","severity":1,"message":"92","line":128,"column":68,"nodeType":"85","messageId":"86","endLine":128,"endColumn":70},{"ruleId":"83","severity":1,"message":"92","line":144,"column":70,"nodeType":"85","messageId":"86","endLine":144,"endColumn":72},{"ruleId":"83","severity":1,"message":"92","line":146,"column":52,"nodeType":"85","messageId":"86","endLine":146,"endColumn":54},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","'useNavigate' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dishes', 'dishesCopy', 'filterBySearch', and 'setSearchDishes'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDishes' needs the current value of 'dishesCopy'.","ArrayExpression",["93"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'fetchMenu' and 'propDishes'. Either include them or remove the dependency array.",["94"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [dishes, dishesCopy, filterBySearch, searchDishes, setSearchDishes]",{"range":"99","text":"100"},"Update the dependencies array to be: [fetchMenu, id, propDishes]",{"range":"101","text":"102"},[1797,1811],"[dishes, dishesCopy, filterBySearch, searchDishes, setSearchDishes]",[2134,2138],"[fetchMenu, id, propDishes]"]